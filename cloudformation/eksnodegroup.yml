Description: >
  Creation of EKS node group aka worker nodes

Parameters:
  EnvironmentName:
    Type: String
    Default: udacitycapstone
  
  DesiredSize:
    Description: How many instances should be created.
    Default: 2
    Type: Number
 
  MinSize:
    Default: 2
    Type: Number

  MaxSize:
    Default: 3
    Type: Number

  nodeLabels:
    Default: blue-nodes
    Type: String

  KeyPairName:
    Description: EC2 key pair name (for SSH-access to the worker node instances)
    Type: AWS::EC2::KeyPair::KeyName
    Default: ekstutorial_key_pair


Resources:

  EKSNodeGroupRole:
    Type: AWS::IAM::Role
    Description: >
      https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html#create-worker-node-role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy               

  EKSNodeGroup:
    Type: AWS::EKS::Nodegroup
    Description: |
      https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname
      https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html
    Properties:
    # the cluster name defined in the ekscluster.yml 
      ClusterName: !Sub ${EnvironmentName}-cluster
      NodeRole: !GetAtt EKSNodeGroupRole.Arn
      NodegroupName: !Sub ${EnvironmentName}-nodegroup
      RemoteAccess:
        Ec2SshKey: !Ref KeyPairName
      ScalingConfig:
        MinSize: !Ref MinSize
        MaxSize: !Ref MaxSize
        DesiredSize: !Ref DesiredSize
      Labels:
        Name: !Ref nodeLabels
      Subnets:
        Fn::Split:
          - ","
          - Fn::ImportValue: !Sub ${EnvironmentName}-PUB-NETS


Outputs:
  EKSNodeGroupRole:
    Description: The node instance role
    Value: !GetAtt EKSNodeGroupRole.Arn
    Export:
      Name: !Sub ${EnvironmentName}-nodeG-Role
  EKSNodeGroup:
    Description: EKS Nodegroup
    Value: !Ref EKSNodeGroup
    Export:
      Name: !Sub ${EnvironmentName}-nodeG